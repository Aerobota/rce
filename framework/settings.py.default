#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#     settings.py
#
#     This file is part of the RoboEarth Cloud Engine framework.
#
#     This file was originally created for RoboEearth
#     http://www.roboearth.org/
#
#     The research leading to these results has received funding from
#     the European Union Seventh Framework Programme FP7/2007-2013 under
#     grant agreement no248942 RoboEarth.
#
#     Copyright 2012 RoboEarth
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#
#     \author/s: Dominique Hunziker
#
#

#######################################
###                                 ###
###          RCE settings           ###
###                                 ###
#######################################

# Custom JSON/ROS messages converters
CONVERTER_CLASSES = (
    'rce.util.converters.image.ImageConverter',
)

# Compression level used for communication
GZIP_LVL = 9

#######################################
###                                 ###
###     Communication settings      ###
###                                 ###
#######################################

# Port which should be used for the HTTP connections to robots from the Master
HTTP_PORT = 9000

# Port which should be used for the websocket connections to the robots
WS_PORT = 9010

# Port which should be used for the communication with the Master
MASTER_PORT = 8080

# Port which should be used for the internal communication
RCE_INTERNAL_PORT = 10030

#Port for connection between rapyuta and console client
RCE_CONSOLE_PORT = 8081

#Port for connection between rosproxy and console client
ROS_PROXY_PORT = 9020

##################################################
###                                            ###
###  Deployment specific interface settings    ###
###                                            ###
##################################################

# Platform used to deploy the cloud engine
# Currently supported :
#   DEFAULT_LOCAL
#   RACKSPACE
#   AWS
#   CUSTOM (ALter the Network Adapter Dictionary as required)
PLATFORM = 'DEFAULT_LOCAL'


# Network Adapter Dictionary
# The required interfaces are thus :
#   EXT_IF : Name of network interface used for the external communication or
#            Static/ElasticIP ipv4 address
#   INT_IF : Name of network interface used for the internal communication
#   BRIDGE_IF : Name of network interface used for the container network

# NOTE : In case of custom DNS configurations or using bound AWS ElasticIP
#        Just replace the required interface with the static IPv4
#        address of that interface.

ADAPTER_CONFIGURATION = {
# CONFIGURATION_NAME  : ('EXT_IF','INT_IF','BRIDGE_IF')
# Alternately for Static/ElasticIP configurations for external IP
# CONFIGURATION_NAME  : ('166.234.176.26','INT_IF','BRIDGE_IF')

'DEFAULT_LOCAL' : ('eth0','eth0','lxcbr0'),
'RACKSPACE'     : ('eth0','eth1','lxcbr0'),
'AWS'           : ('aws_dns','eth0','lxcbr0'),
#'CUSTOM'       : ('eth0','eth1','lxcbr0'),
}

###
# Do not modify this
if PLATFORM not in ADAPTER_CONFIGURATION:
    raise ValueError('Invalid platform selected.')

EXT_IF, INT_IF , BRIDGE_IF = ADAPTER_CONFIGURATION[PLATFORM]
###

#######################################
###                                 ###
###        Machine settings         ###
###                                 ###
#######################################

# Maximum containers supported on this machine (Default : 10)
MAX_CONTAINER = 10

# Dictionary where the root of the container file system is located
ROOTFS = '/opt/rce/container/rootfs'

# Dictionary where temporary configuration files for containers are stored
CONF_DIR = '/opt/rce/container/config'

# Dictionary where temporary files of container are stored
DATA_DIR = '/opt/rce/container/data'

# Dictionary where the source code for the RCE is located
ROOT_SRC_DIR = '/opt/rce/framework'

# Dictionary where the custom ROS nodes are stored
#   - Has to be a list of (filesystem path, unique name) tuples.
#   - Elements with lower index are searched first.
#   - If 'unique name' is None or an empty string the basename of
#     'filesystem path' is used as name
ROOT_PKG_DIR = [('/opt/rce/test', 'rce_test')]


#######################################
###                                 ###
### Admin Cred Settings             ###
###                                 ###
#######################################

# The file used the RoboEarth Cloud Engine to save and record authentication for users
# Remember that the user running master must have write privileges to write to this file.
def prepare_conf():
    """ Helper function to build the basic conf dirs
    TODO: Expand this similar class to parse the entire settings file so as to store it in the user accessible dir
    """
    import os
    path='/'.join([os.getenv('HOME'),'.rce'])
    if not os.path.exists(path):
    	os.makedirs(path)
    return '/'.join([path,'creds'])
PASSWORD_FILE = prepare_conf()
#PASSWORD_FILE = ''

#######################################
###                                 ###
### Developer Debug Mode            ###
###                                 ###
#######################################

DEV_MODE = True
