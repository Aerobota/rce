Content of folder framework
===========================

-   Administration:
        Everything related to ROS and the used nodes.
        
        ToDo:
        -   Check publishing on topics
        -   Make definition of custom message converters dynamic and
            available to django
    
-   django:
        Everything related to the django interface.
        In the folder django are:
            -   reappengine:
                    Contains django interface
            -   img:
                    Contains images for the django interface
            -   js:
                    Contains javascripts used by the django interface
            -   js-src:
                    Contains the javascripts in a readable format; Only
                    for reference purposes
            -   stylesheets:
                    Contains the stylesheet for the django interface
            -   debug:
                    Contains at the moment a dummy page listening a on
                    different port to simulate remote authentification.
        
        Note
        ----
            A lot of the code/design uses or is based on the material of
            the webpage for roboearth.org which can be found here
            
              http://www.roboearth.org/
        
        ToDo:
        -   Adapt authentification process
                -   currently unsafe connection used
                -   currently usage of dummy page
        -   Add possibility to configure/remove existing node/interface
            definitions
        -   Add possibility to register custom message converters for
            the Administration

-   ServiceAPI.py:
        Small API to simplify the usage of the communication interface.

-   reappengine.conf & roscore.conf:
        Configration files which can be used with upstart.
        ( To do so: Copy both files to /etc/init/ )


Configration files
==================

apache:
    - django/rosService | django/rosService_debug
    - for usage of django/rosService_debug adjustments to
      
        /etc/apache2/ports.conf
      
      are necessary

django:
    - django/wsgi.py
    - django/reappengine/settings.py
    - django/reappengine/ROS.py

Administration:
    - Administration/src/settings.py

Setup of framework
==================

For a setup on a standard ubuntu installation:

0)  Complete the setup steps from root README

1)  Install the ROS core patch; further details in the folder patch/ROS_core

2)  Install the following packages by running:
    
      $ sudo apt-get install apache2 python-django python-django-piston libapache2-mod-wsgi libapache2-mod-xsendfile

3)  Adjust the paths / settings in the following files:
    -   django/reappengine/ROS.py
    -   django/wsgi.py
    -   django/reappengine/settings.py

4)  Move the configration file rosService to the apache site folder:
    
      ### $ sudo mv django/rosService /etc/apache2/site-available
    
    or for the current version use:
    
      $ sudo mv django/rosService_debug /etc/apache2/site-available
    
    and add the following line to the file /etc/apache2/ports.conf:
    
      Listen 127.0.0.1:75

5)  Create symlink for the file django/wsgi.py in the folder /var/www with
    the name django.wsgi or adjust the configuration file rosService (from
    step 4) accordingly:
    
      $ sudo ln -s django/wsgi.py /var/www/django.wsgi

6)  Create temporary directory for binary results (depends on configration
    in Administration/src/settings.py)
    
      $ sudo mkdir /var/www/tmp
      $ sudo chmod 777 /var/www/tmp

7)  Copy necessary files for django to /var/www (depends on configuration
    in django/rosService | django/rosService_debug)
    
      $ sudo cp -r django/img /var/www/
      $ sudo cp -r django/js /var/www/
      $ sudo cp -r django/stylesheets /var/www/

8)  Create folder for django database (depends on configuration in
    django/reappengine/settings.py) and create database itself
    
      $ sudo mkdir /var/www/django/reappengine/data
      $ sudo python django/reappengine/manage.py syncdb
      $ sudo chown -R www-data:www-data /var/www/django/reappengine/data

9)  Enable the configuration for the apache server and reload it:
    
      $ sudo a2enmod wsgi
      $ sudo a2enmod xsendfile
      $ sudo a2dissite 000-default
      ### $ sudo a2ensite rosService        (currently not usable)
      $ sudo a2ensite rosService_debug      (use this instead)
      $ sudo service apache2 reload


Usage
=====

1)  Start the apache server if it is not already running
    
    $ sudo service apache2 start

2)  Start roscore if it is not already running
    
    $ roscore

3)  Start the Server node from the ROS package Administration
    
    $ rosrun Administration Server.py

or if the provided files for upstart are installed:

1)  $ sudo service apache2 start

2)  $ sudo service reappengine start


Comments
========

To disable automatic launch of apache server on start-up run the following
command:

$ sudo update-rc.d -f apache2 remove

To launch the apache server manually run:

$ sudo service apache2 start
