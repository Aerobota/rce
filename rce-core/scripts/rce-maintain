#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#     rce-core/rce-maintain
#
#     This file is part of the RoboEarth Cloud Engine framework.
#
#     This file was originally created for RoboEearth
#     http://www.roboearth.org/
#
#     The research leading to these results has received funding from
#     the European Union Seventh Framework Programme FP7/2007-2013 under
#     grant agreement no248942 RoboEarth.
#
#     Copyright 2013 RoboEarth
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#
#     \author/s: Dhananjay Sathe
#
#


from subprocess import check_call
from ConfigParser import SafeConfigParser
from rce.util.cred import _MODE_LENGTH, _RE
import re


def _get_argparse():
    from argparse import ArgumentParser

    parser = ArgumentParser(prog='rce-maintain',
                            description='Maintenance utility for the '
                                        'RoboEarth Cloud Engine.')

    parser.add_argument('mode', choices=['all', 'rce', 'rootfs', 'packages'
                                         'fixcreds'])

    return parser


_INSTALL = 'sudo apt-get update && sudo apt-get -y upgrade'
_GIT_UPDATE = ('mkdir -p /tmp/rapyuta && cd /tmp/rapyuta && sudo rm -rf rce && '
               'git clone https://github.com/IDSCETHZurich/rce.git && '
               'cd rce && sudo sh install.sh')


if __name__ == '__main__':
    from rce.util.settings import PATH, getSettings
    args = _get_argparse().parse_args()

    msg = []
    cmd = []

    if args.mode == 'all':
        print('Updating packages on the host system')
        check_call(_INSTALL, shell=True)

    if args.mode in ('all', 'rootfs'):
        msg.append('packages')
        cmd.append(_INSTALL)

    if args.mode in ('all', 'rce'):
        print('Updating the RoboEarth Cloud Engine on the host system')
        check_call(_GIT_UPDATE, shell=True)

    if args.mode in ('all', 'rootfs', 'rce'):
        msg.append('the RoboEarth Cloud Engine')
        cmd.append(_GIT_UPDATE)
        print('Updating {0} on the container system'.format(' and '.join(msg)))
        check_call('echo "{0}" | sudo rce-make'.format(';'.join(cmd)),
                   shell=True)

    if args.mode == 'fixcreds':
        pwfile = getSettings()._pw_file
        newfile = '.'.join((pwfile, 'recovered'))
        newfile = open(newfile)
        print ('Attempting to recover data to : {0} \n'
               'You will be informed of any users that have corrupted data fields'
               ' in the process you should consider recreating them'.format(newfile))
        with open(pwfile) as f:
            for line in f:
                try:
                    parts = re.match(_RE, line).groups()
                    if len(parts) != 4:
                        raise AssertionError
                    newfile.write(line + '\n')
                except (AssertionError, AttributeError):
                    print "Data for user '{0}' corrupted ! dropping ...".format(line.split()[0])
        newfile.close()

    if args.mode == 'packages':
        pass
        # TODO: This is where hooks for using the packages delivery
        #       mechanism from the machine would fall into place
