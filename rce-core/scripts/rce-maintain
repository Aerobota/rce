#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#     rce-core/rce-environment
#
#     This file is part of the RoboEarth Cloud Engine framework.
#
#     This file was originally created for RoboEearth
#     http://www.roboearth.org/
#
#     The research leading to these results has received funding from
#     the European Union Seventh Framework Programme FP7/2007-2013 under
#     grant agreement no248942 RoboEarth.
#
#     Copyright 2013 RoboEarth
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#     Unless required by applicable law or agreed to in writing, software
#     distributed under the License is distributed on an "AS IS" BASIS,
#     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#     See the License for the specific language governing permissions and
#     limitations under the License.
#
#     \author/s: Dhananjay Sathe
#
#


from subprocess import check_call
from ConfigParser import SafeConfigParser

def _get_argparse():
    from argparse import ArgumentParser

    parser = ArgumentParser(prog='rce-maintaine',
                            description='Maintanance utility for the'
                            ' RoboEarth Cloud Engine ')

    parser.add_argument('mode', choices=['all', 'rce', 'rootfs', 'packages'])

    return parser

_INSTALL = 'sudo apt-get update && sudo apt-get -y upgrade'
_GIT_UPDATE= 'mkdir -p /tmp/rapyuta && cd /tmp/rapyuta && sudo rm -rf rce && git clone https://github.com/IDSCETHZurich/rce.git && cd rce && sudo sh install.sh'


if __name__ == '__main__':
    from rce.util.settings import PATH, getSettings
    args = _get_argparse().parse_args()
    
    if args.mode == 'all':
        print "Updating packages on the host system"
        check_call(_INSTALL, shell=True)
        print "Updating RoboEarth Cloud Engine on the host system"
        check_call(_GIT_UPDATE, shell=True)
        print "Updating packages and the Cloud Engine on the container rootfs"
        check_call('echo "{0}" | sudo rce-make'.format((';').join((_INSTALL, _GIT_UPDATE)), shell=True))

    elif args.mode == 'rootfs':
        print "Updating packages and the Cloud Engine on the container rootfs"
        check_call('echo "{0}" | sudo rce-make'.format((';').join((_INSTALL, _GIT_UPDATE)), shell=True))
    
    elif args.mode == 'rce':
        print "Updating Cloud Engine on the host system"
        check_call(_GIT_UPDATE, shell=True)
        print "Updating the Cloud Engine on the container rootfs"
        check_call('echo "{0}" | sudo rce-make'.format(_GIT_UPDATE), shell=True)
    
    elif args.mode == 'packages':
        pass
        #TODO : This is where hooks for using the packages delivery mechanism from the machine would fall into place
    
    else:
        print "Invalid mode"
        exit()
