Comments pre install
====================

1.  Deploy on a local virtual machine:
    Load Ubutnu 12.04 serveubuntu-12.04-server ISO into you virtual machine
    http://releases.ubuntu.com/12.04/ubuntu-12.04-server-amd64.iso
    (tested with developer-preview on: VMware Fusion 4.0)
    
    Deploy on an IaaS platform
    Lauch the Image provided by your IaaS perovider
    tested on: Rackspace

2.  Ping google.com to check your internet connectivity and DNS.

3.  Install the ssh deamons
    sudo apt-get install openssh-client openssh-server
        n.b. Installing starts them automatically

4.  sudo apt-get install git-core
    git config --global user.name "<your name>"
    git config --global user.email "<your email>"
    visit https://help.github.com/articles/set-up-git for more info

    cd .ssh
    ssh-keygen -t rsa -C "<your email>"
    (Generate authentication keys)

Installation
============

1.  Clone the rce repository (switch branches if necessary)
    cd /opt
    sudo git clone https://github.com/IDSCETHZurich/rce.git rce

2.  Install the linux-container requirements
    sudo apt-get install lxc debootstrap
    # Network should be automatically installed by lxc now; ### bridge-utils dnsmasq 
    
3.  # Network should be automatically installed by lxc now; ### Open setup/setupHost and follow instructions

4.  Run setupContainer.bash to generate a 12.04 container for LXC
    cd /opt/rce/setup
    sudo bash setupContainer.bash --path=/opt/rce/container
    n.b. You may set the ubuntu mirror to the one near you
    
5.  Start the container and perform initial setups:
    
    Enter container (First login: user: root; password: root)
    
    sudo lxc-start -n ros -f /opt/rce/setup/src/stdConfig
    Note:   The file stdConfig contains absolute paths.
            (has to be modified in case of non default installation)
    
    Inside the container do the following steps:
    (all commands require super user privileges)
    
    1.  Install necessary LXC components
        apt-get install --no-install-recommends lxc
    
    2.  Install ROS (refer to http://www.ros.org/wiki/fuerte/Installation/Ubuntu)
        sh -c 'echo "deb http://packages.ros.org/ros/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
        wget http://packages.ros.org/ros.key -O - | apt-key add -
        apt-get update
        
        Minimal installation:
            apt-get install ros-fuerte-ros-comm ros-fuerte-common-msgs
        For debug nodes:
            apt-get install ros-fuerte-ros-comm ros-fuerte-common-msgs ros-fuerte-vision-opencv
        
    3.  Add users
        adduser ros
        adduser --disabled-password --disabled-login --home /opt/rce/data rce
    
    4.  Add files and directories
        mkdir /opt/rce/packages
        mkdir /opt/rce/src
        touch /etc/init/rceComm.conf
        touch /etc/init/rceLauncher.conf
    
    5.  Either change root password or disable root login
        For changing the password:
            passwd
        For disabling the root login:
            Edit file /etc/passwd and replace root:x:... with root:!:...
            (Can also be done from the host machine;
            To activate the login again replace root:!:... with root:x:...)
    
    5.  Leave the container (make sure you are in the container when running in a cloud)
        poweroff

6.  Install ROS in the container host
    sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
    wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
    sudo apt-get update
    
    Minimal installation:
        sudo apt-get install ros-fuerte-ros-comm ros-fuerte-common-msgs
    For debug nodes (should no longer be necessary to install additional packages):
        sudo apt-get install ros-fuerte-ros-comm ros-fuerte-common-msgs ros-fuerte-vision-opencv

7.  Install the websockets related libraries
    sudo apt-get install python-twisted-core
    sudo easy_install AutoBahn

8.  Install libraries needed for Custom Converters
    sudo apt-get install python-imaging

9.  Create necessary folders holding temporary data of containers
    sudo mkdir /opt/rce/container/data
    sudo mkdir /opt/rce/container/config

10. Copy setup and upstart script to container
    sudo cp /opt/rce/setup/src/setup.sh /opt/rce/container/rootfs/opt/rce/
    sudo cp /opt/rce/setup/src/rce.conf /opt/rce/container/rootfs/etc/init/
